---
name: ci
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - run: echo "no linting happens yet. Should we use the the checkstyle maven plugin?"
  build:
    runs-on: ubuntu-latest
    steps:
      - name: check out the codebase
        uses: actions/checkout@v2

      - name: set up java
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'zulu'

      - name: Install old maven (PLEASE FIX ME)
        run: |
          curl -sSL https://archive.apache.org/dist/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz -o /tmp/apache-maven.tar.gz
          cd /tmp
          mkdir /home/runner/maven
          tar -zxvf /tmp/apache-maven.tar.gz --strip-components=1 -C /home/runner/maven

      - uses: actions/cache@v1
        env:
          cache-name: stfrancis-maven-cache
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-stfrancis-${{ env.cache-name }}-${{ hashFiles('**/*.pom') }}
          restore-keys: |
            ${{ runner.os }}-stfrancis-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
          
      - name: get various values for output
        id: get_values
        run: |
          echo "hello there"
          echo ::set-output name=project_version::$(~/maven/bin/mvn -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo ::set-output name=sha_short::$(git rev-parse --short HEAD)
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Testing
        run: ls -lah ~/.m2/
        
      - name: install docker
        uses: docker/setup-buildx-action@v1

      - name: log in to image registry
        if: ${{ github.event_name == 'push' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: ghcr.io

      - name: build and push image
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name == 'push' }}
          tags: |
            ghcr.io/jhu-sheridan-libraries/stfrancis-site:latest
            ghcr.io/jhu-sheridan-libraries/stfrancis-site:${{ steps.get_values.outputs.sha_short }}
          # labels: |
          #   org.opencontainers.image.source=https://github.com/jhu-sheridan-libraries/stfrancis-lutece-site.git
          #   org.opencontainers.image.title=stfancis-site
          #   org.opencontainers.image.version=${{ steps.get_version.outputs.project-version }}
          #   org.opencontainers.image.revision=${{ steps.output.get_values.outputs.sha_short }}
          #   org.opencontainers.image.description="Implementation of Lutece for the St. Francis Neighborhood Center"
          #   org.opencontainers.image.build-date=${{ steps.output.get_values.outputs.created }}
          #   org.opencontainers.image.vendor="The Johns Hopkins Open Source Programs Office"
      
    
